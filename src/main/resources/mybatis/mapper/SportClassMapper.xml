<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yaoyili.dao.SportClassMapper">
  <resultMap id="BaseResultMap" type="com.yaoyili.model.SportClass">
    <id column="scid" jdbcType="INTEGER" property="scid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="kcal" jdbcType="INTEGER" property="kcal" />
    <result column="time" jdbcType="INTEGER" property="time" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="video_url" jdbcType="VARCHAR" property="videoUrl" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
  </resultMap>
  <sql id="Base_Column_List">
    scid, name, kcal, time, level, type, video_url, detail
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sport_class
    where scid = #{scid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sport_class
    where scid = #{scid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yaoyili.model.SportClass">
    insert into sport_class (scid, name, kcal, 
      time, level, type, 
      video_url, detail)
    values (#{scid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{kcal,jdbcType=INTEGER}, 
      #{time,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{videoUrl,jdbcType=VARCHAR}, #{detail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yaoyili.model.SportClass">
    insert into sport_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scid != null">
        scid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="kcal != null">
        kcal,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="videoUrl != null">
        video_url,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scid != null">
        #{scid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="kcal != null">
        #{kcal,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="videoUrl != null">
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yaoyili.model.SportClass">
    update sport_class
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="kcal != null">
        kcal = #{kcal,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="videoUrl != null">
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
    </set>
    where scid = #{scid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yaoyili.model.SportClass">
    update sport_class
    set name = #{name,jdbcType=VARCHAR},
      kcal = #{kcal,jdbcType=INTEGER},
      time = #{time,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      video_url = #{videoUrl,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=VARCHAR}
    where scid = #{scid,jdbcType=INTEGER}
  </update>
</mapper>